@{
    ViewData["Title"] = "Docker";
}

<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="css/estilo.css">
    <style>
        .capa {
            text-align: center;
            margin-bottom: 20px;
        }

        .capa img {
            width: 100%;
            max-width: 600px;
            /* Define a largura máxima da imagem para evitar esticamento */
        }
    </style>
</head>

<body>
    <div class="capa">
        <img src="~/images/docker.png" alt="Imagem de Capa">
    </div>

    <article id="article">
        <section id="postagens">
            <div class="post">
                <h2>Desvendando o Docker</h2>
                <p>O Docker é uma plataforma de código aberto que permite empacotar, distribuir e executar aplicativos
                    em contêineres. Com o Docker, os desenvolvedores podem empacotar suas aplicações com todas as
                    dependências em um contêiner, garantindo que elas funcionem de maneira consistente em qualquer
                    ambiente.</p>
                <p>Uma das principais vantagens do Docker é sua leveza e eficiência. Os contêineres Docker compartilham
                    o núcleo do sistema operacional host, o que os torna mais leves em comparação com as máquinas
                    virtuais tradicionais, resultando em tempos de inicialização mais rápidos e melhor utilização de
                    recursos.</p>
                <p>Além disso, o Docker oferece uma abordagem padronizada para empacotar e distribuir aplicativos,
                    simplificando o processo de implantação e gerenciamento de aplicações em diferentes ambientes, seja
                    localmente, em nuvem ou em um ambiente híbrido.</p>
                <p>No contexto de desenvolvimento de software moderno e práticas como DevOps e CI/CD, o Docker tornou-se
                    uma ferramenta indispensável, permitindo aos desenvolvedores criar, testar e implantar aplicativos
                    de forma rápida e confiável.</p>
            </div>
            <div class="post">
                <h2>Conceitos Fundamentais do Docker</h2>
                <p>Para entender completamente o Docker, é importante familiarizar-se com alguns conceitos fundamentais:</p>
                <ul>
                    <li><strong>Contêiner:</strong> Uma unidade isolada que contém o aplicativo e todas as suas
                        dependências, garantindo que ele funcione de maneira consistente em qualquer ambiente.</li>
                    <li><strong>Imagem:</strong> Um modelo de somente leitura usado para criar contêineres. Uma imagem
                        contém o código do aplicativo, bibliotecas, dependências e outras configurações necessárias para
                        executar o aplicativo.</li>
                    <li><strong>Dockerfile:</strong> Um arquivo de texto que contém instruções para construir uma imagem
                        Docker. O Dockerfile especifica os passos necessários para configurar o ambiente do contêiner e
                        executar o aplicativo.</li>
                    <li><strong>Registry:</strong> Um serviço que armazena e distribui imagens Docker. O Docker Hub é um
                        exemplo de registro público onde os desenvolvedores podem encontrar e compartilhar imagens
                        Docker.</li>
                    <li><strong>Orquestração:</strong> O processo de gerenciar e escalar contêineres em um ambiente
                        distribuído. Ferramentas como Docker Swarm e Kubernetes facilitam a orquestração de contêineres
                        em larga escala.</li>
                </ul>
                <p>Compreender esses conceitos é essencial para aproveitar ao máximo o Docker e suas capacidades de
                    empacotamento e implantação de aplicativos.</p>
            </div>